saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "Assign"
        input_arg {
          name: "ref"
          type_attr: "T"
          is_ref: true
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output_ref"
          type_attr: "T"
          is_ref: true
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "validate_shape"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "use_locking"
          type: "bool"
          default_value {
            b: true
          }
        }
        allows_uninitialized_input: true
      }
      op {
        name: "AssignVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "DecodeCSV"
        input_arg {
          name: "records"
          type: DT_STRING
        }
        input_arg {
          name: "record_defaults"
          type_list_attr: "OUT_TYPE"
        }
        output_arg {
          name: "output"
          type_list_attr: "OUT_TYPE"
        }
        attr {
          name: "OUT_TYPE"
          type: "list(type)"
          has_minimum: true
          minimum: 1
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_STRING
            }
          }
        }
        attr {
          name: "field_delim"
          type: "string"
          default_value {
            s: ","
          }
        }
        attr {
          name: "use_quote_delim"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "na_value"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "select_cols"
          type: "list(int)"
          default_value {
            list {
            }
          }
        }
      }
      op {
        name: "Elu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "GatherNd"
        input_arg {
          name: "params"
          type_attr: "Tparams"
        }
        input_arg {
          name: "indices"
          type_attr: "Tindices"
        }
        output_arg {
          name: "output"
          type_attr: "Tparams"
        }
        attr {
          name: "Tparams"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "HashTableV2"
        output_arg {
          name: "table_handle"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "use_node_name_sharing"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "key_dtype"
          type: "type"
        }
        attr {
          name: "value_dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "HistogramSummary"
        input_arg {
          name: "tag"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LookupTableFindV2"
        input_arg {
          name: "table_handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "keys"
          type_attr: "Tin"
        }
        input_arg {
          name: "default_value"
          type_attr: "Tout"
        }
        output_arg {
          name: "values"
          type_attr: "Tout"
        }
        attr {
          name: "Tin"
          type: "type"
        }
        attr {
          name: "Tout"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "LookupTableImportV2"
        input_arg {
          name: "table_handle"
          type: DT_RESOURCE
        }
        input_arg {
          name: "keys"
          type_attr: "Tin"
        }
        input_arg {
          name: "values"
          type_attr: "Tout"
        }
        attr {
          name: "Tin"
          type: "type"
        }
        attr {
          name: "Tout"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "NoOp"
      }
      op {
        name: "NotEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "OneHot"
        input_arg {
          name: "indices"
          type_attr: "TI"
        }
        input_arg {
          name: "depth"
          type: DT_INT32
        }
        input_arg {
          name: "on_value"
          type_attr: "T"
        }
        input_arg {
          name: "off_value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: -1
          }
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "TI"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_UINT8
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "ScalarSummary"
        input_arg {
          name: "tags"
          type: DT_STRING
        }
        input_arg {
          name: "values"
          type_attr: "T"
        }
        output_arg {
          name: "summary"
          type: DT_STRING
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "SparseToDense"
        input_arg {
          name: "sparse_indices"
          type_attr: "Tindices"
        }
        input_arg {
          name: "output_shape"
          type_attr: "Tindices"
        }
        input_arg {
          name: "sparse_values"
          type_attr: "T"
        }
        input_arg {
          name: "default_value"
          type_attr: "T"
        }
        output_arg {
          name: "dense"
          type_attr: "T"
        }
        attr {
          name: "validate_indices"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tindices"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Sqrt"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "SquaredDifference"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        is_stateful: true
      }
      op {
        name: "VarIsInitializedOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "is_initialized"
          type: DT_BOOL
        }
        is_stateful: true
      }
      op {
        name: "VariableV2"
        output_arg {
          name: "ref"
          type_attr: "dtype"
          is_ref: true
        }
        attr {
          name: "shape"
          type: "shape"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        is_stateful: true
      }
      op {
        name: "Where"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "index"
          type: DT_INT64
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_BOOL
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_BOOL
            }
          }
        }
      }
    }
    tags: "serve"
    tensorflow_version: "1.12.0"
    tensorflow_git_version: "b\'v1.12.0-rc2-3-ga6d8ffae09\'"
  }
  graph_def {
    node {
      name: "global_step/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "global_step"
      op: "VariableV2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
    }
    node {
      name: "global_step/Assign"
      op: "Assign"
      input: "global_step"
      input: "global_step/Initializer/zeros"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "global_step/read"
      op: "Identity"
      input: "global_step"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "csv_rows"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "csv_rows"
      input: "ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "DecodeCSV/record_defaults_0"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DecodeCSV/record_defaults_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "DecodeCSV/record_defaults_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "NA"
          }
        }
      }
    }
    node {
      name: "DecodeCSV/record_defaults_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "NA"
          }
        }
      }
    }
    node {
      name: "DecodeCSV"
      op: "DecodeCSV"
      input: "ExpandDims"
      input: "DecodeCSV/record_defaults_0"
      input: "DecodeCSV/record_defaults_1"
      input: "DecodeCSV/record_defaults_2"
      input: "DecodeCSV/record_defaults_3"
      attr {
        key: "OUT_TYPE"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "field_delim"
        value {
          s: ","
        }
      }
      attr {
        key: "na_value"
        value {
          s: ""
        }
      }
      attr {
        key: "select_cols"
        value {
          list {
          }
        }
      }
      attr {
        key: "use_quote_delim"
        value {
          b: true
        }
      }
    }
    node {
      name: "Square"
      op: "Square"
      input: "DecodeCSV"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Square_1"
      op: "Square"
      input: "DecodeCSV:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Mul"
      op: "Mul"
      input: "DecodeCSV"
      input: "DecodeCSV:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "SquaredDifference"
      op: "SquaredDifference"
      input: "DecodeCSV"
      input: "DecodeCSV:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "Sqrt"
      op: "Sqrt"
      input: "SquaredDifference"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/ignore_value/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/NotEqual"
      op: "NotEqual"
      input: "DecodeCSV:2"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/ignore_value/x"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/indices"
      op: "Where"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/NotEqual"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/values"
      op: "GatherNd"
      input: "DecodeCSV:2"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/indices"
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/dense_shape"
      op: "Shape"
      input: "DecodeCSV:2"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "ax01"
            string_val: "ax02"
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range"
      op: "Range"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range/start"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/Size"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/ToInt64"
      op: "Cast"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/range"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table"
      op: "HashTableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "key_dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
      attr {
        key: "use_node_name_sharing"
        value {
          b: false
        }
      }
      attr {
        key: "value_dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table/table_init"
      op: "LookupTableImportV2"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/Const"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/ToInt64"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/hash_table_Lookup"
      op: "LookupTableFindV2"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/values"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table/Const"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/SparseToDense/default_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/SparseToDense"
      op: "SparseToDense"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/indices"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/to_sparse_input/dense_shape"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/hash_table_Lookup"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/SparseToDense/default_value"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/depth"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/on_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/off_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot"
      op: "OneHot"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/SparseToDense"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/depth"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/on_value"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot/off_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Sum"
      op: "Sum"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/one_hot"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Shape"
      op: "Shape"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Shape"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape"
      op: "Reshape"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Sum"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/ignore_value/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/NotEqual"
      op: "NotEqual"
      input: "DecodeCSV:3"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/ignore_value/x"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/indices"
      op: "Where"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/NotEqual"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/values"
      op: "GatherNd"
      input: "DecodeCSV:3"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/indices"
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tparams"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/dense_shape"
      op: "Shape"
      input: "DecodeCSV:3"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "bx01"
            string_val: "bx02"
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/Size"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range/start"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range/delta"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range"
      op: "Range"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range/start"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/Size"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/ToInt64"
      op: "Cast"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/range"
      attr {
        key: "DstT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table"
      op: "HashTableV2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "key_dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "shared_name"
        value {
          s: ""
        }
      }
      attr {
        key: "use_node_name_sharing"
        value {
          b: false
        }
      }
      attr {
        key: "value_dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table/table_init"
      op: "LookupTableImportV2"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/Const"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/ToInt64"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/hash_table_Lookup"
      op: "LookupTableFindV2"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/values"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table/Const"
      attr {
        key: "Tin"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tout"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/SparseToDense/default_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/SparseToDense"
      op: "SparseToDense"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/indices"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/to_sparse_input/dense_shape"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/hash_table_Lookup"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/SparseToDense/default_value"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Tindices"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/depth"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/on_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/off_value"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot"
      op: "OneHot"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/SparseToDense"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/depth"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/on_value"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot/off_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "TI"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: -1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Sum"
      op: "Sum"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/one_hot"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Shape"
      op: "Shape"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Shape"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape"
      op: "Reshape"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Sum"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/Shape"
      op: "Shape"
      input: "Sqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/Shape"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape"
      op: "Reshape"
      input: "Sqrt"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/Shape"
      op: "Shape"
      input: "DecodeCSV"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/x/Shape"
      input: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/x/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/x/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/x/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x/Reshape"
      op: "Reshape"
      input: "DecodeCSV"
      input: "dnn/input_from_feature_columns/input_layer/x/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/Shape"
      op: "Shape"
      input: "Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/x_2/Shape"
      input: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/x_2/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/x_2/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/x_2/Reshape"
      op: "Reshape"
      input: "Square"
      input: "dnn/input_from_feature_columns/input_layer/x_2/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/Shape"
      op: "Shape"
      input: "Mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/xy/Shape"
      input: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/xy/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/xy/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/xy/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/xy/Reshape"
      op: "Reshape"
      input: "Mul"
      input: "dnn/input_from_feature_columns/input_layer/xy/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/Shape"
      op: "Shape"
      input: "DecodeCSV:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/y/Shape"
      input: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/y/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/y/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/y/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y/Reshape"
      op: "Reshape"
      input: "DecodeCSV:1"
      input: "dnn/input_from_feature_columns/input_layer/y/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/Shape"
      op: "Shape"
      input: "Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice"
      op: "StridedSlice"
      input: "dnn/input_from_feature_columns/input_layer/y_2/Shape"
      input: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack"
      input: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack_1"
      input: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/Reshape/shape"
      op: "Pack"
      input: "dnn/input_from_feature_columns/input_layer/y_2/strided_slice"
      input: "dnn/input_from_feature_columns/input_layer/y_2/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/y_2/Reshape"
      op: "Reshape"
      input: "Square_1"
      input: "dnn/input_from_feature_columns/input_layer/y_2/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "dnn/input_from_feature_columns/input_layer/concat"
      op: "ConcatV2"
      input: "dnn/input_from_feature_columns/input_layer/alpha_indicator/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/beta_indicator/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/dist_xy/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/x/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/x_2/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/xy/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/y/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/y_2/Reshape"
      input: "dnn/input_from_feature_columns/input_layer/concat/axis"
      attr {
        key: "N"
        value {
          i: 8
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\n\000\000\000\010\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.5773502588272095
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.5773502588272095
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 19830610
        }
      }
      attr {
        key: "seed2"
        value {
          i: 136
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/max"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/RandomUniform"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
      op: "Add"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/mul"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/hiddenlayer_0/kernel/part_0"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      input: "dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 8
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/hiddenlayer_0/bias/part_0"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      input: "dnn/hiddenlayer_0/bias/part_0/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/bias/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_0/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/kernel"
      op: "Identity"
      input: "dnn/hiddenlayer_0/kernel/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/MatMul"
      op: "MatMul"
      input: "dnn/input_from_feature_columns/input_layer/concat"
      input: "dnn/hiddenlayer_0/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/bias"
      op: "Identity"
      input: "dnn/hiddenlayer_0/bias/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/BiasAdd"
      op: "BiasAdd"
      input: "dnn/hiddenlayer_0/MatMul"
      input: "dnn/hiddenlayer_0/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_0/Elu"
      op: "Elu"
      input: "dnn/hiddenlayer_0/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction/zero"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction/Equal"
      op: "Equal"
      input: "dnn/hiddenlayer_0/Elu"
      input: "dnn/zero_fraction/zero"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction/Cast"
      op: "Cast"
      input: "dnn/zero_fraction/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction/Mean"
      op: "Mean"
      input: "dnn/zero_fraction/Cast"
      input: "dnn/zero_fraction/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values"
      op: "ScalarSummary"
      input: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values/tags"
      input: "dnn/zero_fraction/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_0/activation/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/hiddenlayer_0/activation"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_0/activation"
      op: "HistogramSummary"
      input: "dnn/dnn/hiddenlayer_0/activation/tag"
      input: "dnn/hiddenlayer_0/Elu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\010\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.7071067690849304
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.7071067690849304
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 19830610
        }
      }
      attr {
        key: "seed2"
        value {
          i: 168
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/max"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/RandomUniform"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
      op: "Add"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/mul"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 8
            }
            dim {
              size: 4
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/hiddenlayer_1/kernel/part_0"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      input: "dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 4
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 4
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/hiddenlayer_1/bias/part_0"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      input: "dnn/hiddenlayer_1/bias/part_0/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/bias/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/hiddenlayer_1/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/kernel"
      op: "Identity"
      input: "dnn/hiddenlayer_1/kernel/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/MatMul"
      op: "MatMul"
      input: "dnn/hiddenlayer_0/Elu"
      input: "dnn/hiddenlayer_1/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/bias"
      op: "Identity"
      input: "dnn/hiddenlayer_1/bias/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/BiasAdd"
      op: "BiasAdd"
      input: "dnn/hiddenlayer_1/MatMul"
      input: "dnn/hiddenlayer_1/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dnn/hiddenlayer_1/Elu"
      op: "Elu"
      input: "dnn/hiddenlayer_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_1/zero"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_1/Equal"
      op: "Equal"
      input: "dnn/hiddenlayer_1/Elu"
      input: "dnn/zero_fraction_1/zero"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_1/Cast"
      op: "Cast"
      input: "dnn/zero_fraction_1/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_1/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_1/Mean"
      op: "Mean"
      input: "dnn/zero_fraction_1/Cast"
      input: "dnn/zero_fraction_1/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values"
      op: "ScalarSummary"
      input: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values/tags"
      input: "dnn/zero_fraction_1/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_1/activation/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/hiddenlayer_1/activation"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/hiddenlayer_1/activation"
      op: "HistogramSummary"
      input: "dnn/dnn/hiddenlayer_1/activation/tag"
      input: "dnn/hiddenlayer_1/Elu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\004\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -1.095445156097412
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.095445156097412
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 19830610
        }
      }
      attr {
        key: "seed2"
        value {
          i: 200
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/max"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/RandomUniform"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Initializer/random_uniform"
      op: "Add"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/mul"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 4
            }
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/logits/kernel/part_0"
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/logits/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/logits/kernel/part_0"
      input: "dnn/logits/kernel/part_0/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/kernel/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/kernel/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/kernel/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/bias/part_0/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/logits/bias/part_0"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dnn/logits/bias/part_0"
        }
      }
    }
    node {
      name: "dnn/logits/bias/part_0/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dnn/logits/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/bias/part_0/Assign"
      op: "AssignVariableOp"
      input: "dnn/logits/bias/part_0"
      input: "dnn/logits/bias/part_0/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/bias/part_0"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/bias/part_0/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/bias/part_0"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dnn/logits/bias/part_0"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/kernel/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/kernel"
      op: "Identity"
      input: "dnn/logits/kernel/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/MatMul"
      op: "MatMul"
      input: "dnn/hiddenlayer_1/Elu"
      input: "dnn/logits/kernel"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/logits/bias/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dnn/logits/bias"
      op: "Identity"
      input: "dnn/logits/bias/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/logits/BiasAdd"
      op: "BiasAdd"
      input: "dnn/logits/MatMul"
      input: "dnn/logits/bias"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dnn/zero_fraction_2/zero"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_2/Equal"
      op: "Equal"
      input: "dnn/logits/BiasAdd"
      input: "dnn/zero_fraction_2/zero"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_2/Cast"
      op: "Cast"
      input: "dnn/zero_fraction_2/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "dnn/zero_fraction_2/Mean"
      op: "Mean"
      input: "dnn/zero_fraction_2/Cast"
      input: "dnn/zero_fraction_2/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "dnn/dnn/logits/fraction_of_zero_values/tags"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/logits/fraction_of_zero_values"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/logits/fraction_of_zero_values"
      op: "ScalarSummary"
      input: "dnn/dnn/logits/fraction_of_zero_values/tags"
      input: "dnn/zero_fraction_2/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/dnn/logits/activation/tag"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dnn/dnn/logits/activation"
          }
        }
      }
    }
    node {
      name: "dnn/dnn/logits/activation"
      op: "HistogramSummary"
      input: "dnn/dnn/logits/activation/tag"
      input: "dnn/logits/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dnn/head/logits/Shape"
      op: "Shape"
      input: "dnn/logits/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "dnn/head/logits/assert_rank_at_least/rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "dnn/head/logits/assert_rank_at_least/assert_type/statically_determined_correct_type"
      op: "NoOp"
    }
    node {
      name: "dnn/head/logits/assert_rank_at_least/static_checks_determined_all_ok"
      op: "NoOp"
    }
    node {
      name: "init"
      op: "NoOp"
    }
    node {
      name: "init_all_tables"
      op: "NoOp"
      input: "^dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table/table_init"
      input: "^dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table/table_init"
    }
    node {
      name: "init_1"
      op: "NoOp"
    }
    node {
      name: "group_deps"
      op: "NoOp"
      input: "^init"
      input: "^init_1"
      input: "^init_all_tables"
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Read/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_1"
      op: "Identity"
      input: "save/Identity"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_2"
      op: "Identity"
      input: "save/Read_1/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_3"
      op: "Identity"
      input: "save/Identity_2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_4"
      op: "Identity"
      input: "save/Read_2/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_5"
      op: "Identity"
      input: "save/Identity_4"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_3/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_6"
      op: "Identity"
      input: "save/Read_3/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_7"
      op: "Identity"
      input: "save/Identity_6"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_4/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/bias/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_8"
      op: "Identity"
      input: "save/Read_4/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_9"
      op: "Identity"
      input: "save/Identity_8"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_5/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/kernel/part_0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_10"
      op: "Identity"
      input: "save/Read_5/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_11"
      op: "Identity"
      input: "save/Identity_10"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_4bad08b10a3c4c97b5f27788848d82ac/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "global_step"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename_1/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename_1"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename_1/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/Read_6/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_12"
      op: "Identity"
      input: "save/Read_6/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_13"
      op: "Identity"
      input: "save/Identity_12"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_7/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_14"
      op: "Identity"
      input: "save/Read_7/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_15"
      op: "Identity"
      input: "save/Identity_14"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_8/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_16"
      op: "Identity"
      input: "save/Read_8/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_17"
      op: "Identity"
      input: "save/Identity_16"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_9/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_18"
      op: "Identity"
      input: "save/Read_9/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_19"
      op: "Identity"
      input: "save/Identity_18"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_10/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/bias/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_20"
      op: "Identity"
      input: "save/Read_10/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_21"
      op: "Identity"
      input: "save/Identity_20"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Read_11/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dnn/logits/kernel/part_0"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_22"
      op: "Identity"
      input: "save/Read_11/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/Identity_23"
      op: "Identity"
      input: "save/Identity_22"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2_1/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 6
              }
            }
            string_val: "dnn/hiddenlayer_0/bias"
            string_val: "dnn/hiddenlayer_0/kernel"
            string_val: "dnn/hiddenlayer_1/bias"
            string_val: "dnn/hiddenlayer_1/kernel"
            string_val: "dnn/logits/bias"
            string_val: "dnn/logits/kernel"
          }
        }
      }
    }
    node {
      name: "save/SaveV2_1/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 6
              }
            }
            string_val: "8 0,8"
            string_val: "10 8 0,10:0,8"
            string_val: "4 0,4"
            string_val: "8 4 0,8:0,4"
            string_val: "1 0,1"
            string_val: "4 1 0,4:0,1"
          }
        }
      }
    }
    node {
      name: "save/SaveV2_1"
      op: "SaveV2"
      input: "save/ShardedFilename_1"
      input: "save/SaveV2_1/tensor_names"
      input: "save/SaveV2_1/shape_and_slices"
      input: "save/Identity_13"
      input: "save/Identity_15"
      input: "save/Identity_17"
      input: "save/Identity_19"
      input: "save/Identity_21"
      input: "save/Identity_23"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency_1"
      op: "Identity"
      input: "save/ShardedFilename_1"
      input: "^save/SaveV2_1"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "save/ShardedFilename_1"
      input: "^save/control_dependency"
      input: "^save/control_dependency_1"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Identity_24"
      op: "Identity"
      input: "save/Const"
      input: "^save/MergeV2Checkpoints"
      input: "^save/control_dependency"
      input: "^save/control_dependency_1"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "global_step"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_INT64
          }
        }
      }
    }
    node {
      name: "save/Assign"
      op: "Assign"
      input: "global_step"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@global_step"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "use_locking"
        value {
          b: true
        }
      }
      attr {
        key: "validate_shape"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/Assign"
    }
    node {
      name: "save/RestoreV2_1/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 6
              }
            }
            string_val: "dnn/hiddenlayer_0/bias"
            string_val: "dnn/hiddenlayer_0/kernel"
            string_val: "dnn/hiddenlayer_1/bias"
            string_val: "dnn/hiddenlayer_1/kernel"
            string_val: "dnn/logits/bias"
            string_val: "dnn/logits/kernel"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 6
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 6
              }
            }
            string_val: "8 0,8"
            string_val: "10 8 0,10:0,8"
            string_val: "4 0,4"
            string_val: "8 4 0,8:0,4"
            string_val: "1 0,1"
            string_val: "4 1 0,4:0,1"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2_1"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2_1/tensor_names"
      input: "save/RestoreV2_1/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Identity_25"
      op: "Identity"
      input: "save/RestoreV2_1"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_0/bias/part_0"
      input: "save/Identity_25"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_26"
      op: "Identity"
      input: "save/RestoreV2_1:1"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_0/kernel/part_0"
      input: "save/Identity_26"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_27"
      op: "Identity"
      input: "save/RestoreV2_1:2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_1/bias/part_0"
      input: "save/Identity_27"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_28"
      op: "Identity"
      input: "save/RestoreV2_1:3"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "dnn/hiddenlayer_1/kernel/part_0"
      input: "save/Identity_28"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_29"
      op: "Identity"
      input: "save/RestoreV2_1:4"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "dnn/logits/bias/part_0"
      input: "save/Identity_29"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_30"
      op: "Identity"
      input: "save/RestoreV2_1:5"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "dnn/logits/kernel/part_0"
      input: "save/Identity_30"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/restore_shard_1"
      op: "NoOp"
      input: "^save/AssignVariableOp"
      input: "^save/AssignVariableOp_1"
      input: "^save/AssignVariableOp_2"
      input: "^save/AssignVariableOp_3"
      input: "^save/AssignVariableOp_4"
      input: "^save/AssignVariableOp_5"
      device: "/device:CPU:0"
    }
    node {
      name: "save/restore_all/NoOp"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    node {
      name: "save/restore_all/NoOp_1"
      op: "NoOp"
      input: "^save/restore_shard_1"
      device: "/device:CPU:0"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_all/NoOp"
      input: "^save/restore_all/NoOp_1"
    }
    versions {
      producer: 27
    }
  }
  saver_def {
    filename_tensor_name: "save/Const:0"
    save_tensor_name: "save/Identity_24:0"
    restore_op_name: "save/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "global_step"
    value {
      bytes_list {
        value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
      }
    }
  }
  collection_def {
    key: "saved_model_main_op"
    value {
      node_list {
        value: "group_deps"
      }
    }
  }
  collection_def {
    key: "summaries"
    value {
      node_list {
        value: "dnn/dnn/hiddenlayer_0/fraction_of_zero_values:0"
        value: "dnn/dnn/hiddenlayer_0/activation:0"
        value: "dnn/dnn/hiddenlayer_1/fraction_of_zero_values:0"
        value: "dnn/dnn/hiddenlayer_1/activation:0"
        value: "dnn/dnn/logits/fraction_of_zero_values:0"
        value: "dnn/dnn/logits/activation:0"
      }
    }
  }
  collection_def {
    key: "table_initializer"
    value {
      node_list {
        value: "dnn/input_from_feature_columns/input_layer/alpha_indicator/alpha_lookup/hash_table/table_init"
        value: "dnn/input_from_feature_columns/input_layer/beta_indicator/beta_lookup/hash_table/table_init"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n!dnn/hiddenlayer_0/kernel/part_0:0\022&dnn/hiddenlayer_0/kernel/part_0/Assign\0325dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp:0\"&\n\030dnn/hiddenlayer_0/kernel\022\002\n\010\032\002\000\000\"\002\n\010(\0012<dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\037dnn/hiddenlayer_0/bias/part_0:0\022$dnn/hiddenlayer_0/bias/part_0/Assign\0323dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp:0\"!\n\026dnn/hiddenlayer_0/bias\022\001\010\032\001\000\"\001\010(\00121dnn/hiddenlayer_0/bias/part_0/Initializer/zeros:08\001"
        value: "\n!dnn/hiddenlayer_1/kernel/part_0:0\022&dnn/hiddenlayer_1/kernel/part_0/Assign\0325dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp:0\"&\n\030dnn/hiddenlayer_1/kernel\022\002\010\004\032\002\000\000\"\002\010\004(\0012<dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\037dnn/hiddenlayer_1/bias/part_0:0\022$dnn/hiddenlayer_1/bias/part_0/Assign\0323dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp:0\"!\n\026dnn/hiddenlayer_1/bias\022\001\004\032\001\000\"\001\004(\00121dnn/hiddenlayer_1/bias/part_0/Initializer/zeros:08\001"
        value: "\n\032dnn/logits/kernel/part_0:0\022\037dnn/logits/kernel/part_0/Assign\032.dnn/logits/kernel/part_0/Read/ReadVariableOp:0\"\037\n\021dnn/logits/kernel\022\002\004\001\032\002\000\000\"\002\004\001(\00125dnn/logits/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\030dnn/logits/bias/part_0:0\022\035dnn/logits/bias/part_0/Assign\032,dnn/logits/bias/part_0/Read/ReadVariableOp:0\"\032\n\017dnn/logits/bias\022\001\001\032\001\000\"\001\001(\0012*dnn/logits/bias/part_0/Initializer/zeros:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\rglobal_step:0\022\022global_step/Assign\032\022global_step/read:02\037global_step/Initializer/zeros:0"
        value: "\n!dnn/hiddenlayer_0/kernel/part_0:0\022&dnn/hiddenlayer_0/kernel/part_0/Assign\0325dnn/hiddenlayer_0/kernel/part_0/Read/ReadVariableOp:0\"&\n\030dnn/hiddenlayer_0/kernel\022\002\n\010\032\002\000\000\"\002\n\010(\0012<dnn/hiddenlayer_0/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\037dnn/hiddenlayer_0/bias/part_0:0\022$dnn/hiddenlayer_0/bias/part_0/Assign\0323dnn/hiddenlayer_0/bias/part_0/Read/ReadVariableOp:0\"!\n\026dnn/hiddenlayer_0/bias\022\001\010\032\001\000\"\001\010(\00121dnn/hiddenlayer_0/bias/part_0/Initializer/zeros:08\001"
        value: "\n!dnn/hiddenlayer_1/kernel/part_0:0\022&dnn/hiddenlayer_1/kernel/part_0/Assign\0325dnn/hiddenlayer_1/kernel/part_0/Read/ReadVariableOp:0\"&\n\030dnn/hiddenlayer_1/kernel\022\002\010\004\032\002\000\000\"\002\010\004(\0012<dnn/hiddenlayer_1/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\037dnn/hiddenlayer_1/bias/part_0:0\022$dnn/hiddenlayer_1/bias/part_0/Assign\0323dnn/hiddenlayer_1/bias/part_0/Read/ReadVariableOp:0\"!\n\026dnn/hiddenlayer_1/bias\022\001\004\032\001\000\"\001\004(\00121dnn/hiddenlayer_1/bias/part_0/Initializer/zeros:08\001"
        value: "\n\032dnn/logits/kernel/part_0:0\022\037dnn/logits/kernel/part_0/Assign\032.dnn/logits/kernel/part_0/Read/ReadVariableOp:0\"\037\n\021dnn/logits/kernel\022\002\004\001\032\002\000\000\"\002\004\001(\00125dnn/logits/kernel/part_0/Initializer/random_uniform:08\001"
        value: "\n\030dnn/logits/bias/part_0:0\022\035dnn/logits/bias/part_0/Assign\032,dnn/logits/bias/part_0/Read/ReadVariableOp:0\"\032\n\017dnn/logits/bias\022\001\001\032\001\000\"\001\001(\0012*dnn/logits/bias/part_0/Initializer/zeros:08\001"
      }
    }
  }
  signature_def {
    key: "predict"
    value {
      inputs {
        key: "csv_rows"
        value {
          name: "csv_rows:0"
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      outputs {
        key: "predictions"
        value {
          name: "dnn/logits/BiasAdd:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
  signature_def {
    key: "regression"
    value {
      inputs {
        key: "inputs"
        value {
          name: "csv_rows:0"
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      outputs {
        key: "outputs"
        value {
          name: "dnn/logits/BiasAdd:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/regress"
    }
  }
  signature_def {
    key: "serving_default"
    value {
      inputs {
        key: "inputs"
        value {
          name: "csv_rows:0"
          dtype: DT_STRING
          tensor_shape {
            dim {
              size: -1
            }
          }
        }
      }
      outputs {
        key: "outputs"
        value {
          name: "dnn/logits/BiasAdd:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
          }
        }
      }
      method_name: "tensorflow/serving/regress"
    }
  }
}
